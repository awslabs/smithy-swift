name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  AWS_SWIFT_SDK_USE_LOCAL_DEPS: 1

jobs:
  downstream:
    runs-on: ${{ matrix.runner }}
    env:
      DEVELOPER_DIR: /Applications/${{ matrix.xcode }}.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        # This matrix runs tests on iOS sim & Mac, on oldest & newest supported Xcodes
        runner:
          - macos-11
          - macos-13
        xcode:
          # Xcode 13.2.1 is used as oldest because 13.2 is the first version which backports concurrency
          - Xcode_13.2.1
          - Xcode_14.3.1
        destination:
          - 'platform=iOS Simulator,OS=15.2,name=iPhone 13'
          - 'platform=iOS Simulator,OS=16.4,name=iPhone 14'
          - 'platform=OS X'
        exclude:
          # Don't run old macOS with new Xcode
          - runner: macos-11
            xcode: Xcode_14.3.1
          # Don't run new macOS with old Xcode
          - runner: macos-13
            xcode: Xcode_13.2.1
          # Don't run old iOS simulator with new Xcode
          - destination: 'platform=iOS Simulator,OS=15.2,name=iPhone 13'
            xcode: Xcode_14.3.1
          # Don't run new iOS simulator with old Xcode
          - destination: 'platform=iOS Simulator,OS=16.4,name=iPhone 14'
            xcode: Xcode_13.2.1
    steps:
      - name: Checkout smithy-swift
        uses: actions/checkout@v3
      - name: Select aws-sdk-swift branch
        run: |
          ORIGINAL_REPO_HEAD_REF="$GITHUB_HEAD_REF" \
          DEPENDENCY_REPO_URL="https://github.com/awslabs/aws-sdk-swift.git" \
          ./scripts/ci_steps/select_dependency_branch.sh
      - name: Checkout aws-sdk-swift
        uses: actions/checkout@v3
        with:
          repository: awslabs/aws-sdk-swift
          ref: ${{ env.DEPENDENCY_REPO_SHA }}
          path: aws-sdk-swift
      - name: Move aws-sdk-swift into place
        run: mv aws-sdk-swift ..
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: 1-${{ runner.os }}-gradle-${{ hashFiles('settings.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            1-${{ runner.os }}-gradle-${{ hashFiles('settings.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
            1-${{ runner.os }}-gradle-
      - name: Cache Swift
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/org.swift.swiftpm
            ~/.cache/org.swift.swiftpm
          key: 1-${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('Package.swift') }}
          restore-keys: |
            1-${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('Package.swift') }}
            1-${{ runner.os }}-${{ matrix.xcode }}-spm-
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Tools Versions
        run: |
          cd ../aws-sdk-swift
          ./scripts/ci_steps/log_tool_versions.sh
      - name: Build & Run Kotlin Unit Tests
        run: ./gradlew build
      - name: Build & Run Swift Unit Tests
        run: swift test
      - name: Prepare aws-sdk-swift Protocol & Unit Tests
        run: |
          cd ../aws-sdk-swift
          ./scripts/ci_steps/prepare_protocol_and_unit_tests.sh
      - name: Build and Run aws-sdk-swift Protocol & Unit Tests
        run: |
          cd ../aws-sdk-swift
          swift test

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        swift:
          - 5.5-amazonlinux2
          - 5.6-focal
          - 5.7-amazonlinux2
          - 5.8-jammy
    container:
      image: swift:${{ matrix.swift }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Install openssl
        run: |
          if [ -x "$(command -v apt)" ]; then
            apt-get update && apt-get install -y libssl-dev
          else
            yum install -y openssl-devel which
          fi
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: 1-${{ runner.os }}-gradle-${{ hashFiles('settings.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            1-${{ runner.os }}-gradle-${{ hashFiles('settings.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
            1-${{ runner.os }}-gradle-
      - name: Cache Swift
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/org.swift.swiftpm
            ~/.cache/org.swift.swiftpm
          key: 1-${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('Package.swift') }}
          restore-keys: |
            1-${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('Package.swift') }}
            1-${{ runner.os }}-${{ matrix.xcode }}-spm-
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build & Run Kotlin Unit Tests
        run: ./gradlew build
      - name: Build & Run Swift Unit Tests
        run: swift test
