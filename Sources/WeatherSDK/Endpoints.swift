// Code generated by smithy-swift-codegen. DO NOT EDIT!

import class ClientRuntime.EndpointsRequestContext
import let ClientRuntime.partitionJSON
import protocol ClientRuntime.EndpointsRequestContextProviding
import struct ClientRuntime.DefaultEndpointResolver
import struct SmithyHTTPAPI.Endpoint

public struct EndpointParams {
    /// docs
    public let region: Swift.String

    public init(
        region: Swift.String
    )
    {
        self.region = region
    }
}

extension EndpointParams: ClientRuntime.EndpointsRequestContextProviding {

    public var context: ClientRuntime.EndpointsRequestContext {
        get throws {
            let context = try ClientRuntime.EndpointsRequestContext()
            try context.add(name: "Region", value: self.region)
            return context
        }
    }
}

public protocol EndpointResolver {
    func resolve(params: EndpointParams) throws -> SmithyHTTPAPI.Endpoint
}

typealias DefaultEndpointResolver = ClientRuntime.DefaultEndpointResolver<EndpointParams>

extension DefaultEndpointResolver {
    private static let ruleSet = "{\"version\":\"1.3\",\"parameters\":{\"Region\":{\"required\":true,\"documentation\":\"docs\",\"type\":\"String\"}},\"rules\":[{\"conditions\":[],\"documentation\":\"base rule\",\"endpoint\":{\"url\":\"https://{Region}.amazonaws.com\",\"properties\":{},\"headers\":{}},\"type\":\"endpoint\"}]}"

    init() throws {
        try self.init(partitions: ClientRuntime.partitionJSON, ruleSet: Self.ruleSet)
    }
}

extension DefaultEndpointResolver: EndpointResolver {}

public struct StaticEndpointResolver: EndpointResolver {

    private let endpoint: SmithyHTTPAPI.Endpoint

    public init(endpoint: SmithyHTTPAPI.Endpoint) {
        self.endpoint = endpoint
    }

    public func resolve(params: EndpointParams) throws -> SmithyHTTPAPI.Endpoint {
        return endpoint
    }
}
